on:
  merge_group:
  pull_request:
    types: [synchronize, labeled, reopened, ready_for_review]
  push:
    branches:
      - master

env:
  CARGO_INCREMENTAL: false
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  RUSTDOCFLAGS: -Dwarnings

name: CI
jobs:
  lint:
    if: github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'B-test')
    name: rust code lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          # we use nightly for clippy and rustfmt
          toolchain: nightly-2024-03-25
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
      - name: format style check
        run: cargo fmt --all -- --check
      - name: cargo clippy check
        run: cargo clippy --all-targets --all-features -- -D warnings\
      # Check with stable toolchain to ensure stable compilation
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - run: cargo check
  self-host:
    name: Test Suite
    needs: lint
    # Uses nightly toolchain to test all features, including nightly
    uses: RibirX/share-workflows/.github/workflows/ribir-win-image-tests.yaml@main
  doc-examples:
    needs: lint
    name: compile doc examples
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - name: build ribir
        run: cargo build
      - name: compile doc examples
        run: |
          {
            echo ./README.md
            find "./docs" -name "*.md"
          } |  xargs -I {} rustdoc --test {} -L target/debug/deps/  --edition 2018 --extern ribir=target/debug/libribir.rlib
  wasm-compile:
    name: wasm compile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown
      - uses: Swatinem/rust-cache@v2
      - name: compile to wasm
        run: cargo build -p ribir --target wasm32-unknown-unknown
      
