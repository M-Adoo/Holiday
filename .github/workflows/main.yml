on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

name: base check
jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  rustfmt:
    name: rust code format style check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            components: clippy
            override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets --all-features -- -D warnings 
  codecov:
      name: code coverage analysis
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2

        - name: Install nightly toolchain
          uses: actions-rs/toolchain@v1
          with:
            toolchain: nightly
            override: true

        - name: Run cargo-tarpaulin
          uses: actions-rs/tarpaulin@v0.1
          with:
            version: '0.9.0'
            args: '-- --test-threads 1'

        - name: Upload to codecov.io
          uses: codecov/codecov-action@v1.0.2
          with:
            token: ${{secrets.CODECOV_TOKEN}}
            fail_ci_if_error: true

        - name: Archive code coverage results
          uses: actions/upload-artifact@v1
          with:
            name: code-coverage-report
            path: cobertura.xml